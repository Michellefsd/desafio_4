Para este Ejercicio 4/2 Desplegué la siguiente lógica:

Plan Inicial: HAcerlo con javascript que tengo mas práctica y luego intentarlo con Python.

// Ejercicio 2: Escribe una función en Python llamada "obtener_datos_climaticos" que tome como argumento el nombre de la ciudad en español y realice una solicitud a la API pública de OpenWeatherMap para obtener 
// //  los datos climáticos de todas las ciudades capitales de LATAM, en español.  // // 
// El programa debe devolver un documento separado por puntos y comas de todas las capitales con datos como:
// •	nombre de la capital
// •	país
// •	descripción del clima 
// •	sensación térmica
// •	presión
// •	humedad
// •	temperatura mínima
// •	temperatura máxima. 
// Puedes encontrar la documentación de la API en https://openweathermap.org/api


// Paso 1 - Inscribirse en OpenWeather y leer parte de la documentacion

// Paso 2 - Identificar la Api que me sirve 
// https://openweathermap.org/api/one-call-3

// Paso 3 - Copiar el ejemplo en un async await en la carpeta "./js/ej_4-2.js"

// Paso 3 - Averiguar los países de LATAM
// Source: https://es.wikipedia.org/wiki/Am%C3%A9rica_Latina

// Argentina
// Bolivia
// Brasil
// Chile
// Colombia
// Costa Rica
// Cuba
// Ecuador
// El Salvador
// Guatemala
// Haití
// Honduras
// México50​
// Nicaragua
// Panamá
// Paraguay
// Perú
// República Dominicana
// Uruguay
// Venezuela

// Paso 4 - Obtener sus Capitales:

// Argentina =                Buenos Aires
// Bolivia =                  La Paz
// Brasil =                   Brasília
// Chile =                    Santiago de Chile
// Colombia =                 Bogotá
// Costa Rica =               San José
// Cuba =                     Havana
// Ecuador =                  Quito
// El Salvador =              San Salvador
// Guatemala =                Guatemala
// Haití =                    Port-au-Price
// Honduras =                 Tegucigalpa
// México =                   México DF
// Nicaragua =                Managua
// Panamá =                   Panamá
// Paraguay =                 Asunción
// Perú =                     Lima
// República Dominicana =     Santo Domingo
// Uruguay =                  Montevideo
// Venezuela =                Caracas

// Paso 5 - 
// Empiezo a Investigar GeoCoding
// miro este video
// "https://www.youtube.com/watch?v=nksauZe87Nw"

Plan Inicial: modificado.
Ahora voy a copiar textual el video en Python a ver q tal me va y 
luego intentaré transcribirlo a Javascript. 

Paso 6 - copio textual del video y me enfrento a dos problemas. 
1 - no se  ver codigo python en mi vscode y en el tutorial lo da por hecho:
solucion: 
#segui estos pasos para entender como habilitar que corra el programa de python en vscode
#https://learn.microsoft.com/en-us/training/modules/python-install-vscode/1-introduction 

2 - requests no funciona
solucion: 
#voy a esta otra pagina para encopntar el comando que falta 
#https://www.w3schools.com/python/module_requests.asp
"pip install requests"
No me anduvo. Mire un tutorial corto de instalacion de requests y lo instale de la forma especificada con powershell :o (no se si eso es bueno)
funciono el archivo python supero la fase de error deimport requests


paso 7 - 
29/07/20233 23:29pm. 
Voy a parar a descansar pero termine con esto en mi consola:
'cod': 401, 'message': 'Please note that using One Call 3.0 requires a separate subscription to the One Call 
by Call plan. Learn more here https://openweathermap.org/price. If you have a valid subscription to the One Call by Call plan, but still receive this error, then please see https://openweathermap.org/faq#error401 for more info.+
y esto es lo que dice: 

API calls return an error 401

You can get the error 401 in the following cases:

    You did not specify your API key in API request.
    Your API key is not activated yet. Within the next couple of hours, it will be activated and ready to use.
    You are using wrong API key in API request. Please, check your right API key in personal account.
    You are using a Free subscription and try requesting data available in other subscriptions . For example, 16 days/daily forecast API, any historical weather data, Weather maps 2.0, etc). Please, check your subscription in your personal account.

    Solo voy a esperar hasta mañana yy soltar