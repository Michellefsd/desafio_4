{"version":3,"sources":["ej_4-2.js"],"names":["key","capitalesLatam","obtener_datos_climaticos","capitales","datos_climaticos_capitales","capital","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","ciudad","csvContent","headers","encodedUri","link","regeneratorRuntime","async","_context","prev","next","undefined","response","Symbol","iterator","done","value","awrap","fetch","concat","then","data","json","console","sensacion","presion","humedad","max","min","pais","log","descripcion","push","Capital","Pais","Descripcion","Sensacion","Presion","Humedad","Max","Min","sent","t0","finish","join","forEach","datos","values","map","header","encodeURI","document","createElement","setAttribute","body","appendChild","click","stop"],"mappings":"aAAA,IAAMA,IAAM,mCACNC,eAAiB,CADjBD,eACAC,SAGF,WAsBEC,oBAA2B,cAnB7B,SAmB6B,SAAA,QAAA,eAAA,YACjC,iBACUC,cACAC,YAHuB,UAAA,SAAA,WAAA,OAAA,gBAN7B,aAM6B,WAA3BF,yBAA2B,SAAMG,GAAN,IAAAF,EAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAAjB,EAAAE,EAAA,CAAAA,GAAAJ,eAAAG,EAAA,GAAAG,IAAAD,GAAA,GAAAE,OAAAa,EAAAH,EAAAC,KAAA,EAAAV,EAQPa,EAROC,OAAAC,YAAA,KAAA,EAAA,GAAAlB,GAAAI,EAAAD,EAAAW,QAAAK,KAAA,CAAAP,EAAAE,KAAA,GAAA,MAAA,OAQXT,EARWD,EAAAgB,MAAAR,EAAAE,KAAA,GAAAJ,mBAAAW,MAWAC,MAAA,oDAAAC,OAArBlB,EAAqB,WAAAkB,OAArB7B,IAAqB,0BACrB8B,KAAA,SAAAR,GAAU,OAAGS,EAAYC,SACzBF,KAAA,SAAAC,GACAE,QAAMC,IAAAA,GACN,IAAMC,EAAUJ,EAAK,KACfK,EAAOL,EAAGA,IAAH,QACPM,EAAWN,EAAQ,QAAzB,GAAiB,YACXO,EAAWP,EAAL,KAAK,WACjBE,EAAYF,EAAA,KAAA,SACZ3B,EAAAA,EAAAA,KAAAA,SACIiC,EAAAN,EAAW1B,KAAX,SACAiC,EAAQC,EAFoB,KAEpBA,SACRN,QAAAO,IAAA,WAAeC,EAHa,WAAAF,EAAA,4BAAAE,EAAA,wBAAAP,EAAA,eAAAC,EAAA,iBAAAC,EAAA,0BAAAE,EAAA,0BAAAD,EAAA,MAI5BjC,EAJ4BsC,KAAA,CAK5BC,QAAWR,EACXS,KAAAL,EACAM,YAP4BJ,EAQ5BK,UAAOR,EARXS,QAAAZ,EApBqBa,QAAAZ,EA2BjBa,IAAOZ,EA3BUa,IAAAZ,OAAA,KAAA,GAAApB,EAAAiC,KAAA,KAAA,GAAA7C,GAAA,EAAAY,EAAAE,KAAA,EAAA,MAAA,KAAA,GAAAF,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAkC,GAAAlC,EAAA,MAAA,GAAAX,GAAA,EAAAC,EAAAU,EAAAkC,GAAA,KAAA,GAAAlC,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAb,GAAA,MAAAG,EAAA,QAAAA,EAAA,SAAA,KAAA,GAAA,GAAAS,EAAAC,KAAA,GAAAZ,EAAA,MAAAC,EAAAU,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAmC,OAAA,IAAA,KAAA,GAAA,OAAAnC,EAAAmC,OAAA,IAAA,KAAA,GAAAzC,EAAA,+BAAAA,IAmCvBC,EAAU,CAAC,UAAW,OAAQ,cAAe,YAAa,UAAW,UAAW,MAAO,QAnChEyC,KAAA,KAAA,KAAAlD,EAAAmD,QAAA,SAAAC,GAuCzB,IAAMC,EAAS5C,EAAQ6C,IAAI,SAAAC,GAAM,OAAIH,EAAMG,KAvClB/C,GAAA6C,EAAAH,KAAA,KAAA,OAAAxC,EAAA8C,UAAAhD,IA6CvBG,EAAO8C,SAASC,cAAc,MA7CPC,aAAA,OAAAjD,GAAAC,EAAAgD,aAAA,WAAA,8BAAAF,SAAAG,KAAAC,YAAAlD,GAiD7BA,EAAKmD,QAjDwB,KAAA,GAAA,IAAA,MAAA,OAAAhD,EAAAiD,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA","file":"ej_4-2.min.js","sourcesContent":["const key = \"10971b499be61b351760e8d57f0e3a4d\"\r\nconst capitalesLatam = [\r\n    \"buenos aires\", \r\n    \"la paz\", \r\n    \"brasilia\", \r\n    \"santiago de chile\",\r\n    \"san jose,cr\", \r\n    \"bogota\", \r\n    \"habana\", \r\n    \"quito\",  \r\n    \"san salvador\",\r\n    \"guatemala\", \r\n    \"Port-au-Prince\", \r\n    \"tegucigalpa\", \r\n    \"mexico,mx\", \r\n    \"managua\", \r\n    \"panama\", \r\n    \"asuncion\", \r\n    \"lima\", \r\n    \"Santo Domingo\",\r\n    \"montevideo\", \r\n    \"caracas\"  \r\n];\r\n\r\n\r\n//Funcion//\r\nconst obtener_datos_climaticos = async(capital) => {\r\n/////////     // pedazo de codigo generado por chatGPT///////////////////////\r\n    const capitales = capital ? [capital] : capitalesLatam\r\n    const datos_climaticos_capitales = [];\r\n    for (const ciudad of capitales) {\r\n/////////////////////////fin del codigo generado chatGPT///////////////////////\r\n\r\n        const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${key}&units=metric&lang=es`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            const capital = data['name'];\r\n            const pais = data['sys']['country'];\r\n            const descripcion = data['weather'][0]['description'];\r\n            const sensacion = data['main']['feels_like'];\r\n            const presion = data['main']['pressure'];\r\n            const humedad = data['main']['humidity'];\r\n            const max = data['main']['temp_max'];\r\n            const min = data['main']['temp_min'];\r\n            console.log(\"Ciudad: \" + capital + \", país: \" + pais + \", descripción del clima: \" + descripcion + \", sensación térmica: \" + sensacion + \"°, presión: \" + presion + \"hPa, humedad: \" + humedad + \"%, temperatura mínima: \" + min + \"°, temperatura máxima: \" + max + \"°.\");\r\n            datos_climaticos_capitales.push({\r\n                \"Capital\": capital,\r\n                \"Pais\": pais,\r\n                \"Descripcion\": descripcion,\r\n                \"Sensacion\": sensacion,\r\n                \"Presion\": presion,\r\n                \"Humedad\": humedad,\r\n                \"Max\": max,\r\n                \"Min\": min,\r\n            });\r\n        });\r\n    }\r\n// Pedazo de código generado por chatGPT\r\n    // Genero el contenido  de CSV \r\n    let csvContent = \"data:text/csv;charset=utf-8,\";\r\n    const headers = [\"Capital\", \"Pais\", \"Descripcion\", \"Sensacion\", \"Presion\", \"Humedad\", \"Max\", \"Min\"];\r\n    csvContent += headers.join(\";\") + \"\\n\";\r\n\r\n    datos_climaticos_capitales.forEach(datos => {\r\n        const values = headers.map(header => datos[header]);\r\n        csvContent += values.join(\";\") + \"\\n\";\r\n    });\r\n\r\n    // creo un link y genero la descarga\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"datos_climaticos_latam.csv\");\r\n    document.body.appendChild(link); // Required for Firefox\r\n    link.click();\r\n// fin del código generado por ChatGPT\r\n}\r\n\r\n\r\n"]}