{"version":3,"sources":["ej_4-2.js"],"names":["key","capitalesLatam","obtener_datos_climaticos","capital","capitales","datos_climaticos_capitales","ciudad","fetch","then","response","json","data","console","log","pais","descripcion","sensacion","presion","humedad","max","min","push","csvContent","headers","join","forEach","datos","values","map","header","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click"],"mappings":"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","sourcesContent":["const key = \"10971b499be61b351760e8d57f0e3a4d\"\r\nconst capitalesLatam = [\r\n    \"buenos aires\", \r\n    \"la paz\", \r\n    \"brasilia\", \r\n    \"santiago de chile\",\r\n    \"san jose,cr\", \r\n    \"bogota\", \r\n    \"habana\", \r\n    \"quito\",  \r\n    \"san salvador\",\r\n    \"guatemala\", \r\n    \"Port-au-Prince\", \r\n    \"tegucigalpa\", \r\n    \"mexico,mx\", \r\n    \"managua\", \r\n    \"panama\", \r\n    \"asuncion\", \r\n    \"lima\", \r\n    \"Santo Domingo\",\r\n    \"montevideo\", \r\n    \"caracas\"  \r\n];\r\n\r\n\r\n//Funcion//\r\nconst obtener_datos_climaticos = async(capital) => {\r\n////    // pedazo de codigo generado por chatGPT      /////////\r\n    const capitales = capital ? [capital] : capitalesLatam\r\n    const datos_climaticos_capitales = [];\r\n    for (const ciudad of capitales) {\r\n////         fin del codigo generado chatGPT         //////////\r\n\r\n        const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${key}&units=metric&lang=es`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            const capital = data['name'];\r\n            const pais = data['sys']['country'];\r\n            const descripcion = data['weather'][0]['description'];\r\n            const sensacion = data['main']['feels_like'];\r\n            const presion = data['main']['pressure'];\r\n            const humedad = data['main']['humidity'];\r\n            const max = data['main']['temp_max'];\r\n            const min = data['main']['temp_min'];\r\n            console.log(\"Ciudad: \" + capital + \", país: \" + pais + \", descripción del clima: \" + descripcion + \", sensación térmica: \" + sensacion + \"°, presión: \" + presion + \"hPa, humedad: \" + humedad + \"%, temperatura mínima: \" + min + \"°, temperatura máxima: \" + max + \"°.\");\r\n            datos_climaticos_capitales.push({\r\n                \"Capital\": capital,\r\n                \"Pais\": pais,\r\n                \"Descripcion\": descripcion,\r\n                \"Sensacion\": sensacion,\r\n                \"Presion\": presion,\r\n                \"Humedad\": humedad,\r\n                \"Max\": max,\r\n                \"Min\": min,\r\n            });\r\n        });\r\n    }\r\n    // con este if hago que solo me arme el documento \r\n    // cuando quiere la lista completa de capitales de latinoamerica\r\n    if (capitales == capitalesLatam) {\r\n    //// Pedazo de código generado por chatGPT\r\n    //// Genero el contenido  de CSV \r\n        let csvContent = \"data:text/csv;charset=utf-8,\";\r\n        const headers = [\"Capital\", \"Pais\", \"Descripcion\", \"Sensacion\", \"Presion\", \"Humedad\", \"Max\", \"Min\"];\r\n        csvContent += headers.join(\";\") + \"\\n\";\r\n    \r\n        datos_climaticos_capitales.forEach(datos => {\r\n            const values = headers.map(header => datos[header]);\r\n            csvContent += values.join(\";\") + \"\\n\";\r\n        });\r\n    \r\n        // creo un link y genero la descarga\r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"datos_climaticos_latam.csv\");\r\n        document.body.appendChild(link); // Requerido por Firefox\r\n        link.click();\r\n    //// fin del código generado por ChatGPT\r\n    }\r\n  \r\n}\r\n\r\n\r\n"],"file":"ej_4-2.dev.js"}