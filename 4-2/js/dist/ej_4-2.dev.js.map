{"version":3,"sources":["ej_4-2.js"],"names":["key","obtener_datos_climaticos","capital","capitales","capitalesLatam","ciudad","fetch","then","response","json","data","console","log","pais","descripcion","sensacion","presion","humedad","max","min","id"],"mappings":";;AAEA,IAAMA,GAAG,GAAG,kCAAZ,C,CACA;;AACA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjC;AACUC,UAAAA,SAFuB,GAEXD,OAAO,GAAG,CAACA,OAAD,CAAH,GAAeE,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGRD,SAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGlBE,UAAAA,MAHkB;AAAA;AAAA,0CAMFC,KAAK,4DAAqDD,MAArD,oBAAqEL,GAArE,2BAAL,CACtBO,IADsB,CACjB,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADS,EAEtBF,IAFsB,CAEjB,UAAAG,IAAI,EAAI;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,gBAAMR,OAAO,GAAGQ,IAAI,CAAC,MAAD,CAApB;AACA,gBAAMG,IAAI,GAAGH,IAAI,CAAC,KAAD,CAAJ,CAAY,SAAZ,CAAb;AACA,gBAAMI,WAAW,GAAGJ,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,EAAmB,aAAnB,CAApB;AACA,gBAAMK,SAAS,GAAGL,IAAI,CAAC,MAAD,CAAJ,CAAa,YAAb,CAAlB;AACA,gBAAMM,OAAO,GAAGN,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,CAAhB;AACA,gBAAMO,OAAO,GAAGP,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,CAAhB;AACA,gBAAMQ,GAAG,GAAGR,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,CAAZ;AACA,gBAAMS,GAAG,GAAGT,IAAI,CAAC,MAAD,CAAJ,CAAa,UAAb,CAAZ;AACA,gBAAMU,EAAE,GAAGV,IAAI,CAAC,IAAD,CAAf;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAaV,OAAb,GAAuB,UAAvB,GAAoCW,IAApC,GAA2C,2BAA3C,GAAyEC,WAAzE,GAAuF,uBAAvF,GAAiHC,SAAjH,GAA6H,aAA7H,GAA6IC,OAA7I,GAAuJ,aAAvJ,GAAuKC,OAAvK,GAAiL,wBAAjL,GAA4ME,GAA5M,GAAkN,wBAAlN,GAA6OD,GAA7O,GAAmP,GAA/P;AACH,WAfsB,CANE;;AAAA;AAMnBV,UAAAA,QANmB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;;AAyBA,IAAMJ,cAAc,GAAG,CACnB,cADmB,EAEnB,QAFmB,EAGnB,UAHmB,EAInB,mBAJmB,EAKnB,aALmB,EAMnB,QANmB,EAOnB,QAPmB,EAQnB,OARmB,EASnB,cATmB,EAUnB,WAVmB,EAWnB,gBAXmB,EAYnB,aAZmB,EAanB,WAbmB,EAcnB,SAdmB,EAenB,QAfmB,EAgBnB,UAhBmB,EAiBnB,MAjBmB,EAkBnB,eAlBmB,EAmBnB,YAnBmB,EAoBnB,SApBmB,CAAvB","sourcesContent":["\r\n\r\nconst key = \"10971b499be61b351760e8d57f0e3a4d\"\r\n//Funcion//\r\nconst obtener_datos_climaticos = async(capital) => {\r\n/////////     // pedazo de codigo generado por chatGPT///////////////////////\r\n    const capitales = capital ? [capital] : capitalesLatam\r\n    for (const ciudad of capitales) {\r\n/////////////////////////fin del codigo generado chatGPT///////////////////////\r\n\r\n        const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${key}&units=metric&lang=es`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            const capital = data['name']\r\n            const pais = data['sys']['country']\r\n            const descripcion = data['weather'][0]['description']\r\n            const sensacion = data['main']['feels_like']\r\n            const presion = data['main']['pressure']\r\n            const humedad = data['main']['humidity']\r\n            const max = data['main']['temp_max']\r\n            const min = data['main']['temp_min']\r\n            const id = data['id']\r\n            console.log(id)\r\n            console.log(\"Ciudad: \" + capital + \", país: \" + pais + \", descripción del clima: \" + descripcion + \", sensación térmica: \" + sensacion + \", presión: \" + presion + \", humedad: \" + humedad + \", temperatura mínima: \" + min + \", temperatura máxima: \" + max + \".\")\r\n        })\r\n    }\r\n}\r\n\r\nconst capitalesLatam = [\r\n    \"buenos aires\", \r\n    \"la paz\", \r\n    \"brasilia\", \r\n    \"santiago de chile\",\r\n    \"san jose,cr\", \r\n    \"bogota\", \r\n    \"habana\", \r\n    \"quito\",  \r\n    \"san salvador\",\r\n    \"guatemala\", \r\n    \"Port-au-Prince\", \r\n    \"tegucigalpa\", \r\n    \"mexico,mx\", \r\n    \"managua\", \r\n    \"panama\", \r\n    \"asuncion\", \r\n    \"lima\", \r\n    \"Santo Domingo\",\r\n    \"montevideo\", \r\n    \"caracas\"  \r\n];\r\n\r\n"],"file":"ej_4-2.dev.js"}